@page "/thelegendofzelda/ingredients/{name}"
@inject HttpClient Http
@layout TheLegendOfZelda_Layout

<PageTitle>@Name - The Legend of Zelda&trade; - Utilities.Games</PageTitle>

@if (Loading)
{
    <p class="alert alert-light">Loading...</p>
}
else if (ingredient != null)
{
    <Utilities.Games.Shared.Card.Card
        ImageUrl="@($"./Subsites/TheLegendOfZelda/images/ingredients/{ingredient.Name}.png")"
    >
        <Title>@ingredient.Name</Title>
        <Footer>
            <span class="badge bg-primary mx-1">@(ingredient.Category)</span>
            <span class="badge bg-primary mx-1">@(ingredient.Type)</span>
        </Footer>
    </Utilities.Games.Shared.Card.Card>
}
else
{
    <p class="alert alert-warning">No commander by the name of @(Name).</p>
}

@code {
    bool Loading = false;
    [Parameter]
    public string Name { get; set; }

    private DataModels.Ingredient ingredient;

    protected override async Task OnInitializedAsync()
    {
        Loading = true;
        var options = new System.Text.Json.JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        };
        Name = Uri.UnescapeDataString(Name);
        ingredient = (await Http.GetFromJsonAsync<DataModels.Ingredient[]>("Subsites/TheLegendOfZelda/data/ingredients.json", options))
        .FirstOrDefault(o => o.Name == Name);
        Loading = false;
    }
}
