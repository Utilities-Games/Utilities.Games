@page "/thelegendofzelda/ingredients"
@inject HttpClient Http
@layout TheLegendOfZelda_Layout

<h3>Ingredients</h3>
<p>An ingredient can be used to craft recipes in <em>The Legend of Zelda: Breath of the Wild</em>.</p>

<Utilities.Games.Shared.Card.Container Loading="@Loading">
    @if (ingredients?.Length > 0)
    {
        foreach (Games.Models.Subsites.TheLegendOfZelda.Ingredient ingredient in ingredients)
        {
            <Utilities.Games.Shared.Card.Card
                ImageUrl="@($"./Subsites/TheLegendOfZelda/images/ingredients/{ingredient.Name}.png")"
                NavigationUrl="@($"./thelegendofzelda/ingredients/{ingredient.Name}")"
                MaximumImageWidth="144"
                MaximumImageHeight="144"
            >
                <Title>@ingredient.Name</Title>
            </Utilities.Games.Shared.Card.Card>
        }
    }
    else
    {
        <Utilities.Games.Shared.Errors.NoItems
            ItemName="Ingredient"
            GitHubLabel="thelegendofzelda"
            GitHubTitle="[BUG][TheLegendOfZelda] {Brief Description}"></Utilities.Games.Shared.Errors.NoItems>
    }
</Utilities.Games.Shared.Card.Container>
@code {
    bool Loading = false;
    private DataModels.Ingredient[] ingredients;

    protected override async Task OnInitializedAsync() {
        Loading = true;
        var options = new System.Text.Json.JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        };
        ingredients = await Http.GetFromJsonAsync<DataModels.Ingredient[]>("Subsites/TheLegendOfZelda/data/ingredients.json", options);
        Loading = false;
    }
}
