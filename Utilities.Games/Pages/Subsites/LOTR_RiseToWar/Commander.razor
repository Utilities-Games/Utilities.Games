@page "/lotr_risetowar/commanders/{name}"
@inject HttpClient Http
@layout LOTR_RiseToWar_Layout

@if (commander == null)
{
    <p class="alert alert-light">Loading...</p>
}
else
{
    <div class="card mx-auto" style="width: 18rem;">
        <img class="card-img-top" src="./Subsites/LOTR_RiseToWar/images/commanders/@(commander.Name).png" />
        <div class="card-body">
            <h5 class="card-title text-center">@(commander.Name)</h5>
            <p class="card-text">{Insert Flavor Text Here}</p>
        </div>
        <div class="card-footer">
            <span class="badge badge-primary mx-1">@(commander.Alignment)</span>
            @if (commander.Classes?.Length > 0)
            {
                foreach (var @class in commander.Classes)
                {
                    <a class="badge badge-secondary mx-1" title="@(@class) Class" href="./lotr_risetowar/classes/@(@class)">@(@class)</a>
                }
            }
        </div>
    </div>

    <h5>Stats</h5>
    @if (commander.Stats != null && commander.Stats?.Might != null && commander.Stats?.Focus != null && commander.Stats?.Speed != null)
    {
        <div class="row">
            <ul>
                <li>
                    <strong>Might</strong>: @(commander.Stats?.Might?.Base) + @(commander.Stats?.Might?.Rate)/lvl
                </li>
                <li>
                    <strong>Focus</strong>: @(commander.Stats?.Focus?.Base) + @(commander.Stats?.Focus?.Rate)/lvl
                </li>
                <li>
                    <strong>Speed</strong>: @(commander.Stats?.Speed?.Base) + @(commander.Stats?.Speed?.Rate)/lvl
                </li>
            </ul>
        </div>
        <div class="row">
            @if (statsChartModel != null)
            {
                <GrowthChart Model="statsChartModel" GrowthInstances="25"></GrowthChart>
            }
            else
            {
                <p class="alert alert-info">Loading Chart...</p>
            }
        </div>
    }
    else
    {
        <p class="alert alert-info">No base stats</p>
    }

    <h5>Skills</h5>
    <div class="row">
        @if (commander.Skills?.Length > 0)
        {
            <ul>
                @foreach (var skill in commander.Skills)
                {
                    <li>
                        <a href="./lotr_risetowar/skills/@(skill.Name)">@(skill.Name)</a>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="alert alert-info">No skills</p>
        }
    </div>
}

@code {
    bool LoadingCommander = false;
    [Parameter]
    public string Name { get; set; }

    private Models.Commander commander;

    private Utilities.Games.Models.GrowthChartModel statsChartModel;

    protected override async Task OnInitializedAsync()
    {
        var options = new System.Text.Json.JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        };
        commander = (await Http.GetFromJsonAsync<Models.Commander[]>("Subsites/LOTR_RiseToWar/data/commanders.json", options))
            .FirstOrDefault(o => o.Name == Name);
        var chartModel = new Games.Models.GrowthChartModel($"{commander.Name}'s Growth Chart");
        Console.WriteLine("Loading Chart Model!");
        chartModel.Datasets.Add(new Games.Models.GrowthChartModel.Dataset()
        {
            Label = "Might",
            Color = "red",
            BaseValue = commander.Stats.Might.Base,
            GrowthRate = commander.Stats.Might.Rate
        });
        chartModel.Datasets.Add(new Games.Models.GrowthChartModel.Dataset()
        {
            Label = "Focus",
            Color = "blue",
            BaseValue = commander.Stats.Focus.Base,
            GrowthRate = commander.Stats.Focus.Rate
        });
        chartModel.Datasets.Add(new Games.Models.GrowthChartModel.Dataset()
        {
            Label = "Speed",
            Color = "green",
            BaseValue = commander.Stats.Speed.Base,
            GrowthRate = commander.Stats.Speed.Rate
        });
        statsChartModel = chartModel;
        statsChartModel.InstanceLabel = "Lvl";
    }
}
