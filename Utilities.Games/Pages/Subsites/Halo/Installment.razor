@page "/halo/installments/{name}"
@inject HttpClient Http
@layout Halo_Layout

@if (LoadingInstallment)
{
    <p class="alert alert-light">Loading...</p>
}
else if (installment != null)
{
    <div class="card mx-auto" style="width: 18rem;">
        <img class="card-img-top" src="./Subsites/Halo/images/installments/@(installment.Name.Replace(":", "")).png" />
        <div class="card-body">
            <h5 class="card-title text-center">@(installment.Name)</h5>
        </div>
        <div class="card-footer">
            @if (installment.Platforms?.Length > 0)
            {
                foreach (var platformName in installment.Platforms)
                {
                    <span class="badge bg-secondary mx-1">@(platformName)</span>
                }
            }
        </div>
    </div>
}
else
{
    <p class="alert alert-warning">No installment by the name of @(Name).</p>
}

@code {
    bool LoadingInstallment = false;
    [Parameter]
    public string Name { get; set; }

    private DataModels.Installment installment;

    protected override async Task OnInitializedAsync()
    {
        LoadingInstallment = true;
        var options = new System.Text.Json.JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        };
        Name = Uri.UnescapeDataString(Name);
        installment = (await Http.GetFromJsonAsync<DataModels.Installment[]>("Subsites/Halo/data/installments.json", options))
            .FirstOrDefault(o => o.Name == Name);
        LoadingInstallment = false;
    }
}
