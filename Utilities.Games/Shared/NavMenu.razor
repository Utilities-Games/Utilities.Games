@inject HttpClient Http
@using Utilities.Games.Models

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Utilities.Games</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (!Loading && subsites?.Count > 0)
        {
            <li class="nav-item dropdown px-3">
                <a class="nav-link dropdown-toggle" href="javascript:void()" id="navbarSubSitesLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">Subsites</a>
                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarSubSitesLink">
                    @foreach (var subsite in subsites)
                    {
                        <li>
                            <NavLink class="dropdown-item" href="@($"./{subsite.Slug}")" Match="NavLinkMatch.Prefix">
                                <img class="@($"navbar-toggler-icon theme-{subsite.Slug.ToLower()}")" src="@($"./Subsites/{subsite.Slug}/images/favicon.png")" />&nbsp;@subsite.Name
                            </NavLink>
                        </li>
                    }
                </ul>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="help" Match="NavLinkMatch.All">
                <span class="oi oi-question-mark" aria-hidden="true"></span> Help
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://github.com/Utilities-Games/Utilities.Games" Match="NavLinkMatch.All">
                <span class="oi oi-external-link" aria-hidden="true"></span> GitHub
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    bool Loading { get; set; }

    List<Subsite> subsites { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Loading = true;
        var options = new System.Text.Json.JsonSerializerOptions()
        {
            PropertyNameCaseInsensitive = true
        };
        subsites = await Http.GetFromJsonAsync<List<Subsite>>("./Subsites/subsites.json", options);
        Loading = false;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
